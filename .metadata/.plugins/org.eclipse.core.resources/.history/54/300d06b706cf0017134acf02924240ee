package abc.xyz.binarytree;

import java.util.HashMap;

public class VerticalSum {

	Node root;
	
	void VerticalSum(Node node){
		
		if(node == null) return;
		HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
		
		verticalSumUtil(node, 0, hm);
		
		if(hm != null)
			System.out.println(hm.entrySet());
	}
	
	void verticalSumUtil(Node node, int hd, HashMap<Integer, Integer> hm){
		if(node == null) return;
		
		verticalSumUtil(node.left, hd-1, hm);
		
		int prevSum = (hm.get(hd) == null) ? 0 : hm.get(hd);
		hm.put(hd,  prevSum+node.data);
		
		verticalSumUtil(node.right, hd+1, hm);
	}
	public static void main(String[] args) {
        /* Create following Binary Tree
              1
            /    \
          2        3
         / \      / \
        4   5    6   7
  
        */
		VerticalSum tree = new VerticalSum();
		tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);
        tree.root.right.left = new Node(6);
        tree.root.right.right = new Node(7);
           
  
        System.out.println("Following are the values of" + 
                           " vertical sums with the positions" +
                        " of the columns with respect to root ");
        tree.VerticalSum(tree.root);
    }
	
}	